import{j as g}from"./styled-components.browser.esm-BiQtg4p9.js";import{r as a}from"./index-BjzEU6Zr.js";import{w as m}from"./AutoCompleteInfinite-C67mg2-f.js";import"./index-C0fuwcOY.js";import"./Button-BneYr597.js";import"./CircularProgress-B7DgIoGt.js";import"./OffOutlineCloseIcon-C3ZF4iWJ.js";import"./OffCloseIcon-dIrXP-IS.js";import"./CircleCheckOutlineIcon-7m-Hf7Te.js";import"./ClearIcon-CTCte1z_.js";import"./ErrorOutlineIcon-C0uk5SEn.js";import"./SapoIcon-Ong2Henh.js";import"./v4-8I8R7izr.js";import"./Chip-S8oiI7Ah.js";import"./IconButton-C_jwIMBT.js";import"./useRippleCenter-fyPqct0G.js";import"./Typography-DbQM3xCn.js";import"./UIComponentProvider-CICpnxab.js";import"./Box-CmmyW-oH.js";import"./index-DIVfDX71.js";import"./ButtonGroup-D15u6qfv.js";import"./Checkbox-BYMGdY0l.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./Alert-C2SqmsB-.js";import"./RadioGroup-Ztn1OArN.js";import"./Toggle-BLK8q4BS.js";import"./SapoCircularProgress-BVd8Nqie.js";import"./Link-DD9ODXsv.js";import"./Tabs-Bf3FDTM_.js";import"./LinearProgress-BulaN-sJ.js";import"./ProgressStep-CTpx3zVV.js";import"./Grid-CK-aGCPn.js";import"./LoadingCircularProgress-DqZ1pgs3.js";import"./extends-BRA9QXyq.js";import"./tiny-invariant-CopsF_GD.js";const $={id:"TimePicker",title:"Components/TimePicker",component:m,argTypes:{}},S=r=>{const[i,o]=a.useState();return g.jsx(m.type,{...r,value:i,onChange:o})},e=S.bind({});e.args={};e.parameters={design:{type:"figma",url:"https://www.figma.com/file/dLpg6DjeBzl6jMtYQYe8uu/0.-Design-System?node-id=1614%3A3521"}};const D=r=>{const[i,o]=a.useState(),[l,T]=a.useState();return g.jsx(m.type,{isTimeSameDay:!0,...r,value:i,secondValue:l,onChange:o,onChangeSecond:T})},t=D.bind({});t.args={};t.parameters={design:{type:"figma",url:"https://www.figma.com/file/dLpg6DjeBzl6jMtYQYe8uu/0.-Design-System?node-id=1614%3A3521"}};var s,n,p;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  const [date, setDate] = useState<Date | null>();
  return <TimePicker.type {...args} value={date} onChange={setDate} />;
}`,...(p=(n=e.parameters)==null?void 0:n.docs)==null?void 0:p.source}}};var c,u,d;t.parameters={...t.parameters,docs:{...(c=t.parameters)==null?void 0:c.docs,source:{originalSource:`args => {
  const [startTime, setStartTime] = useState<Date | null>();
  const [endTime, setEndTime] = useState<Date | null>();
  return <TimePicker.type isTimeSameDay {...args} value={startTime} secondValue={endTime} onChange={setStartTime} onChangeSecond={setEndTime} />;
}`,...(d=(u=t.parameters)==null?void 0:u.docs)==null?void 0:d.source}}};const ee=["Basic","Range"];export{e as Basic,t as Range,ee as __namedExportsOrder,$ as default};
